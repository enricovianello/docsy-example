[{"body":"StoRM Authentication And Authorization StoRM Backend and StoRM WebDAV components are able to support VOMS extension, and to use that to define access policy (complete VOMS-awareness). StoRM WebDAV service also supports OAuth tokens authentication and authorization.\nTO-DO\nThe SRM authentication and authorization flow TO-DO\nThere are several steps StoRM does to manage access to file:\n User makes a request with his proxy (hopefully with VOMS extensions) StoRM checks if the user can perform the requested operation on the required resource StoRM ask user mapping to the LCMAPS service StoRM enforce a real ACL on the file and directories requested Jobs running on behalf of the user can perform a direct access on the data  StoRM default ACL StoRM also allows to define default ACLs, a list of ACL entries that will be applied automatically on each read (srmPrepareToGet) and write (srmPrepareToPut) operation. This is useful in case of experiment ise cases, such as the CMS one, that want to allow local access to file on group different from the one that made the SRM request operation. These default ACLs have to be set up on the desired storage area in the namespace.xml file.\nTO-DO\nThe OAuth Token authentication and authorization flow TO-DO\n","excerpt":"StoRM Authentication And Authorization StoRM Backend and StoRM WebDAV …","ref":"/storm-docs/docs/concepts/storm-security/","title":"StoRM Security"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/configuration/backend/","title":"StoRM Backend"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/user-guides/client-srm/","title":"ClientSRM User Guide"},{"body":"StoRM is a lightweight storage resource manager (SRM) solution developed at INFN, which powers the Italian Tier-1 data center at INFN-CNAF, as well as more than 30 other sites.\nThe SRM (“Storage Resource Manager”) is a protocol for Storage Resource Management. The SRM protocol does not do any data transfer. The protocol is used to ask a Mass Storage System (MSS) to make a file ready for transfer, or to create space in a disk cache to which a file can be uploaded. The file is then transferred to or from a Transfer URL or TURL.\nRead more:\n The Storage Resource Manager Interface Specification Version 2.2  StoRM typical deployment StoRM implements the SRM version 2.2 data management specification and is typically deployed on top of a cluster file system like IBM GPFS. StoRM has a layered architecture (Figure 1), split between two main components: the StoRM frontend and backend services. The StoRM frontend service implements the SRM interface exposed to client applications and frameworks. The StoRM backend service implements the actual storage management logic by interacting directly with the underlying file system. Data transfer is provided by GridFTP, HTTP/WebDAV and XRootD services accessing directly the file system underlying the StoRM deployment. StoRM WebDAV, besides HTTP data transfer functionality, also provides a WebDAV-based data management interface.\nStoRM supports tape through integration with GEMSS, a tape library manager component also developed at INFN-CNAF.\nStoRM provides flexible AuthN/Z support:\n VOMS \u0026 OAuth tokens (WebDAV \u0026 CDMI) File access control is enforced via POSIX ACLs  ","excerpt":"StoRM is a lightweight storage resource manager (SRM) solution …","ref":"/storm-docs/docs/overview/","title":"StoRM Architecture Overview"},{"body":"The file /etc/storm/backend-server/storm.properties contains StoRM Backend configuration. This file is read at service startup. Your changes will be applied after a service restart.\n Since StoRM v1.12.0, a huge name refactoring has been done. All the names of the properties, for example, have been cleared of dot and minus. The unique separator character allowed is the underscore. The section related to the database connection, in particular, has been also heavily refactored.\n    Property Description Default     SRM Service     srm_endpoints List of the accepted StoRM SRM end-points. Each end-point must be composed by host and port. This is used by StoRM to understand if a SURL is valid (managed or not). The first endpoint of this list is considered the default public SRM endpoint. Example:  srm_endpoints.1.host = fe-storm.example.org It’s initialized with the local FQDN as host and 8444.   storm.service.FE-public.hostname [DEPRECATED] StoRM Frontend hostname in case of a single Frontend StoRM deployment, StoRM Frontends DNS alias in case of a multiple Frontends StoRM deployment.    storm.service.port [DEPRECATED] SRM service port. 8444   storm.service.SURL.endpoint [DEPRECATED] List of comma separated strings identifying the StoRM Frontend endpoint(s). This is used by StoRM to understand if a SURL is local. E.g. srm://storm.cnaf.infn.it:8444/srm/managerv2.  If you want to accept SURL with the ip address instead of the FQDN hostname you have to add the proper endpoint (E.g. IPv4: srm://192.168.100.12:8444/srm/managerv2 or IPv6: srm://[2001:0db8::1428:57ab]:8444/srm/managerv2. “srm://[storm.service.FE-public.hostname]:8444/srm/managerv2”   storm.service.SURL.default-ports [DEPRECATED] List of comma separated valid SURL port numbers. 8444   Database connection     db.username The connection user name to be passed to the JDBC driver to establish a connection. “storm”   db.password The connection password to be passed to the JDBC driver to establish a connection. “storm”   db.hostname Fully Qualified Domain Name of database hostname. It’s initialized with the local FQDN   db.port Database connection URL port. 3306   db.properties The connection properties that will be sent to the JDBC driver when establishing new connections. Format of the string must be [propertyName=property;]* NOTE - The “user” and “password” properties will be passed explicitly, so they do not need to be included here. “serverTimezone=UTC\u0026autoReconnect=true”   Database connection pool     db.pool.size The maximum number of active connections that can be allocated from database connection pool at the same time, or negative for no limit. -1   db.pool.min_idle The minimum number of connections that can remain idle in the pool, without extra ones being created, or zero to create none. 10   db.pool.max_wait_millis The maximum number of milliseconds that the pool will wait (when there are no available connections) for a connection to be returned before throwing an exception, or -1 to wait indefinitely. 5000   db.pool.test_on_borrow The indication of whether objects will be validated before being borrowed from the pool. If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another. true   db.pool.test_while_idle The indication of whether objects will be validated by the idle object evictor (if any). If an object fails to validate, it will be dropped from the pool. true   REST Service     rest.port Internal REST services endpoint port. 9998   rest.max_threads Internal REST services endpoint max active requests. 100   rest.max_queue_size Internal REST services endpoint max queue size of accepted requests. 1000   Sanity Checks     sanity_checks_enabled Enable/disable sanity checks during bootstrap phase. true   XMLRPC Server     xmlrpc.port Port to listen on for incoming XML-RPC connections from Frontends(s). 8080   xmlrpc.max_threads Number of threads managing XML-RPC connection from Frontends(s). A well sized value for this parameter have to be at least equal to the sum of the number of working threads in all FrontEend(s). 256   xmlrpc.max_queue_size Max number of accepted and queued XML-RPC connection from Frontends(s). 1000   security_enabled Whether the backend will require a token to be present for accepting XML-RPC requests. false   security_token The token that the backend will require to be present for accepting XML-RPC requests.    Disk Usage Service     du.enabled Disk Usage service is used for the periodic update of the used-space of all the storage spaces that are not GPFS-with-quota-enabled. Running a periodic ‘du -s -b’ on the top of the storage spaces root directory, the used-space stored into the database is updated. By default, the service is disabled. Disk Usage service is used for the periodic update of the used-space of all the storage spaces that are not GPFS-with-quota-enabled. Running a periodic ‘du -s -b’ on the top of the storage spaces root directory, the used-space stored into the database is updated. By default, the service is disabled. false   du.enable_parallel_tasks Enable parallel execution of the expected du. false   du.initial_delay The initial delay before the service is started (seconds). 60   du.tasks_interval The interval in seconds between successive run. 86400   Advanced Configuration     directories.automatic_creation Enable/disable the automatic directory creation during srmPrepareToPut requests. false   directories.writeperm Enable/disable write permission on directory created through srmMkDir requests. false   pinlifetime.default Default pinLifetime in seconds used for pinning files in case of srmPrepareToPut or srmPrapareToGet requests 259200   pinlifetime.maximum Maximum allowed value for pinLifeTime. Values beyond the max will be dropped to max value. 1814400   extraslashes.file Add extra slashes after the “authority” part of a TURL for FILE protocol. ''   extraslashes.rfio Add extra slashes after the “authority” part of a TURL for RFIO protocol. ''   extraslashes.gsiftp Add extra slashes after the “authority” part of a TURL for GSIFTP protocol. ‘/’   extraslashes.root Add extra slashes after the “authority” part of a TURL for ROOT protocol. ‘/’   gc_pinnedfiles_cleaning_delay Initial delay in seconds before starting the garbage collector thread 10   gc_pinnedfiles_cleaning_interval Garbage Collector time interval in seconds. 300   files.default_filesize Default FileSize. 1000000   files.default_lifetime Default FileLifetime in seconds used for VOLATILE file in case of SRM request. 259200   files.default_overwrite Default file overwrite mode to use upon srmPrepareToPut requests. Possible values are N (Never), A (Always), D (when files Differs). A   files.default_storagetype Default File Storage Type to be used for srmPrepareToPut requests. Possible values are V (Volatile), P (Permanent) and D (Durable) P   requests_scheduler.core_pool_size Crusher Scheduler worker pool base size. 10   requests_scheduler.max_pool_size Crusher Schedule worker pool max size. 50   requests_scheduler.queue_size Request queue maximum size. 2000   ptp_scheduler.core_pool_size PrepareToPut worker pool base size. 50   ptp_scheduler.max_pool_size PrepareToPut worker pool max size. 200   ptp_scheduler.queue_size PrepareToPut request queue maximum size. 1000   ptg_scheduler.core_pool_size PrepareToGet worker pool base size. 50   ptg_scheduler.max_pool_size PrepareToGet worker pool max size. 200   ptg_scheduler.queue_size PrepareToGet request queue maximum size. 2000   bol_scheduler.core_pool_size BringOnline worker pool base size. 50   bol_scheduler.max_pool_size BringOnline Worker pool max size. 200   bol_scheduler.queue_size BringOnline request queue maximum size. 2000   requests_picker_agent.delay Initial delay before starting to pick requests from the DB, in seconds. 1   requests_picker_agent.interval Polling interval in seconds to pick up new SRM requests. 2   requests_picker_agent.max_fetched_size Maximum number of requests picked up at each polling time. 100   synch_ls.max_entries Maximum number of entries returned by an srmLs call. Since in case of recursive srmLs results can be in order of million, this prevent a server overload. 2000   synch_ls.default_all_level_recursive Default value for the parameter “allLevelRecursive” of the srmLS request. false   synch_ls.default_num_levels Default value for the parameter “numOfLevels” of the srmLS request. 1   synch_ls.default_offset Default value for the parameter “offset” of the LS request. 0   completed_requests_agent.enabled Enable/Disable Garbage Collector true   completed_requests_agent.delay Initial delay before starting the requests garbage collection process, in seconds. 10   completed_requests_agent.interval Time interval for between two requests in garbage collection. In seconds. 600   completed_requests_agent.purge_size Number of requests removed at each run. Every run purge max 800 requests in final status 800   completed_requests_agent.purge_age Time after that the GC consider a terminated request as garbage in seconds 21600   inprogress_requests_agent.delay Delay on starting agent. In seconds. 10   inprogress_requests_agent.interval Expired-Put-Requests-Agent transits expired put requests to a final state. A put request is expired if pinLifetime is reached. This interval is the interval between two agent executions. In seconds. 300   inprogress_requests_agent.ptp_expiration_time Time in seconds to consider an in-progress ptp request as expired. 2592000   skip_ptg_acl_setup Skip ACL setup for PtG requests false   hearthbeat.bookkeeping_enabled  false   hearthbeat.performance_measuring_enabled  false   hearthbeat.period  60   hearthbeat.performance_logbook_time_interval  15   hearthbeat.performance_glance_time_interval  15   info_quota_refresh_period GPFS Quota Manager refresh period (in seconds). 900   http_turl_prefix URL path prefix for the generated HTTP TURLs. Example: ‘/subpath’. ''   server_pool_status_check_timeout Timeout for status requests on GridFTP and HTTP endpoints used to generate TURLs. 20000   abort_maxloop  10   ping_properties_filename The name of a properties file with extra key=value properties that will be returned during Ping requests. “ping-values.properties”    ","excerpt":"The file /etc/storm/backend-server/storm.properties contains StoRM …","ref":"/storm-docs/docs/reference/configuration/backend/storm.properties/","title":"Configure StoRM Backend service"},{"body":"","excerpt":"","ref":"/storm-docs/releases/backend/","title":"StoRM Backend Releases"},{"body":"","excerpt":"","ref":"/storm-docs/docs/configuration/how-to/path-authz-db/","title":"Configure path-authz.db"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/configuration/frontend/","title":"StoRM Frontend"},{"body":"Mapping SURLs to TURLs Information about storage managed by StoRM is stored in a configuration file named namespace.xml located at /etc/storm/backend-server/ on StoRM Backend host. One of the information stored into namespace.xml file is what is needed to perform the mapping functionality. The mapping functionality is the process of retrieving or building the transport URL (TURL) of a file addressed by a Site URL (SURL) together with grid user credential.\nThe following schema shows the different schema of SURL and TURL:\nA couple of quick concepts from SRM:\n The SURL is the logical identifier for a local data entity Data access and data transfer are made through the TURLs The TURL identify a physical location of a replica SRM services retrieve the TURL from a namespace database (like DPNS component in DPM) or build it through other mechanisms (like StoRM)  In StoRM, the mapping functionality is provided by the namespace component (NS).\n The Namespace component works without a database. The Namespace component is based on an XML configuration. It relies on the physical storage structure.  The basic features of the namespace component are:\n The configuration is modular and structured (representation is based on XML) An efficient structure of namespace configuration lives in memory. No access to disk or database is performed The loading and the parsing of the configuration file occurs:  at start-up of the back-end service when configuration file is modified    StoRM is different from the other solution, where typically, for every SRM request a query to the data base have to be done in order to establish the physical location of file and build the correct transfer URL. The namespace functions relies on two kind of parameters for mapping operations derived from the SRM requests, that are:\n the grid user credential (a subject or a service acting on behalf of the subject) the SURL  The Fig.4 shows the main concepts of Namespace Component:\n NS-Filesystem: is the representation of a Storage Area Mapping rule: represents the basic rule for the mapping functionalities Approachable rule: represents the coarse grain access control to the Storage Area.  This is and example of the FS element:\n\u003cfilesystem name=\"dteam-FS\" fs_type=\"ext3\"\u003e \u003cspace-token-description\u003eDTEAM_TOKEN\u003c/space-token-description\u003e \u003croot\u003e/storage/dteam\u003c/root\u003e \u003cfilesystem-driver\u003eit.grid.storm.filesystem.swig.posixfs\u003c/filesystem-driver\u003e \u003cspacesystem-driver\u003eit.grid.storm.filesystem.MockSpaceSystem\u003c/spacesystem-driver\u003e \u003cstorage-area-authz\u003e \u003cfixed\u003epermit-all\u003c/fixed\u003e \u003c/storage-area-authz\u003e \u003cproperties\u003e \u003cRetentionPolicy\u003ereplica\u003c/RetentionPolicy\u003e \u003cAccessLatency\u003eonline\u003c/AccessLatency\u003e \u003cExpirationMode\u003eneverExpire\u003c/ExpirationMode\u003e \u003cTotalOnlineSize unit=\"GB\" limited-size=\"true\"\u003e291\u003c/TotalOnlineSize\u003e \u003cTotalNearlineSize unit=\"GB\"\u003e0\u003c/TotalNearlineSize\u003e \u003c/properties\u003e \u003ccapabilities\u003e \u003caclMode\u003eAoT\u003c/aclMode\u003e \u003cdefault-acl\u003e \u003cacl-entry\u003e \u003cgroupName\u003elhcb\u003c/groupName\u003e \u003cpermissions\u003eRW\u003c/permissions\u003e \u003c/acl-entry\u003e \u003c/default-acl\u003e \u003ctrans-prot\u003e \u003cprot name=\"file\"\u003e \u003cschema\u003efile\u003c/schema\u003e \u003c/prot\u003e \u003cprot name=\"gsiftp\"\u003e \u003cid\u003e0\u003c/id\u003e \u003cschema\u003egsiftp\u003c/schema\u003e \u003chost\u003egsiftp-dteam-01.cnaf.infn.it\u003c/host\u003e \u003cport\u003e2811\u003c/port\u003e \u003c/prot\u003e \u003cprot name=\"gsiftp\"\u003e \u003cid\u003e1\u003c/id\u003e \u003cschema\u003egsiftp\u003c/schema\u003e \u003chost\u003egsiftp-dteam-02.cnaf.infn.it\u003c/host\u003e \u003cport\u003e2811\u003c/port\u003e \u003c/prot\u003e \u003cprot name=\"rfio\"\u003e \u003cschema\u003erfio\u003c/schema\u003e \u003chost\u003erfio-dteam.cnaf.infn.it\u003c/host\u003e \u003cport\u003e5001\u003c/port\u003e \u003c/prot\u003e \u003cprot name=\"root\"\u003e \u003cschema\u003eroot\u003c/schema\u003e \u003chost\u003eroot-dteam.cnaf.infn.it\u003c/host\u003e \u003cport\u003e1094\u003c/port\u003e \u003c/prot\u003e \u003c/trans-prot\u003e \u003cpool\u003e \u003cbalance-strategy\u003eround-robin\u003c/balance-strategy\u003e \u003cmembers\u003e \u003cmember member-id=\"0\"\u003e\u003c/member\u003e \u003cmember member-id=\"1\"\u003e\u003c/member\u003e \u003c/members\u003e \u003c/pool\u003e \u003c/capabilities\u003e \u003cdefaults-values\u003e \u003cspace lifetime=\"86400\" type=\"volatile\" guarsize=\"291\" totalsize=\"291\"/\u003e \u003cfile lifetime=\"3600\" type=\"volatile\"/\u003e \u003c/defaults-values\u003e \u003c/filesystem\u003e Attributes meaning:\n \u003cfilesystem name=\"dteam-FS\" fs_type=\"ext3\"\u003e : The name is the element identifier. It identifies this Storage Area in the namespace domains. The fs_type is the type of the filesystem the Storage Area is built on. Possible values are: ext3, gpfs. Please note that ext3 stands for all generic POSIX filesystem (ext3, Lustre, etc.) \u003cspace-token-description\u003eDTEAM_TOKEN\u003c/space-token-description\u003e : Storage Area space token description. \u003croot\u003e/storage/dteam\u003c/root\u003e : Physical root directory of the Storage Area on the file system. \u003cfilesystem-driver\u003eit.grid.storm.filesystem.swig.posixfs\u003c/filesystem-driver\u003e : Driver loaded by the Backend for filesystem interaction. This driver is used mainly to set up ACLs on space and files. \u003cspacesystem-driver\u003eit.grid.storm.filesystem.MockSpaceSystem\u003c/spacesystem-driver\u003e Driver loaded by the Backend for filesystem interaction. This is driver is used to manage space allocation. (E.g. on GPFS it uses the gpfs_prealloc() call).  Storage Area properties \u003cproperties\u003e \u003cRetentionPolicy\u003ereplica\u003c/RetentionPolicy\u003e \u003cAccessLatency\u003eonline\u003c/AccessLatency\u003e \u003cExpirationMode\u003eneverExpire\u003c/ExpirationMode\u003e \u003cTotalOnlineSize unit=\"GB\" limited-size=\"true\"\u003e291\u003c/TotalOnlineSize\u003e \u003cTotalNearlineSize unit=\"GB\"\u003e0\u003c/TotalNearlineSize\u003e \u003c/properties\u003e in details:\n \u003cRetentionPolicy\u003ereplica\u003c/RetentionPolicy\u003e : Retention Policy of the Storage Area. Possible values are: replica, custodial. \u003cAccessLatency\u003eonline\u003c/AccessLatency\u003e : Access Latency of the Storage Area. Possible values: online, nearline. \u003cExpirationMode\u003eneverExpire\u003c/ExpirationMode\u003e : Expiration Mode of the Storage Area. Deprecated. \u003cTotalOnlineSize unit=\"GB\" limited-size=\"true\"\u003e291\u003c/TotalOnlineSize\u003e Total on-line size of the Storage Area in GigaBytes. In case the attribute limited-size=“true”, StoRM enforce this limit at SRM level. When the space used for the Storage Area is at least equal to the size specified, every further SRM request to write files will fail with SRM_NO_FREE_SPACE error code. \u003cTotalNearlineSize unit=\"GB\"\u003e0\u003c/TotalNearlineSize\u003e : Total near-line size of the Storage Area. This only means in case the Storage Area is in some way attached to a MSS storage system (such as TSM with GPFS).  Storage area capabilities \u003caclMode\u003eAoT\u003c/aclMode\u003e This is the ACL enforcing approach. Possible values are: AoT, JiT. In case of AheadOfTime(AoT) approach StoRM sets up a physical ACL on file and directories for the local group (gid) in which the user is mapped. (The mapping is done querying the LCMAPS service con the BE machine passing both user DN and FQANs). The group ACL remains for the whole lifetime of the file. In case of JustInTime(JiT) approach StoRM sets up and ACL for the local user (uid) the user is mapped. The ACL remains in place only for the lifetime of the SRM request, then StoRM removes it. (This is to avoid to grant access to pool account uid in case of reallocation on different users.)\n\u003cdefault-acl\u003e \u003cacl-entry\u003e \u003cgroupName\u003elhcb\u003c/groupName\u003e \u003cpermissions\u003eRW\u003c/permissions\u003e \u003c/acl-entry\u003e \u003c/default-acl\u003e This is the Default ACL list. A list of ACL entry (that specify a local user (uid) or group id (gid) and a permission (R,W,RW). This ACL are automatically by StoRM at each read or write request. Useful for use cases where experiment want to allow local access to file on group different than the one that made the SRM request operation.\n#### Access and Transfer protocol supported\nThe file protocol:\n\u003cprot name=\"file\"\u003e \u003cschema\u003efile\u003c/schema\u003e \u003c/prot\u003e The file protocol means the capability to perform local access on file and directory. If user performs an SRM request (srmPtG or srmPtP) specifying the file protocol, and it is supported by the selected Storage Area, StoRM return a TURL structured as:\nfile:///atlas/atlasmcdisk/filename  This TURL can be used through GFAL or other SRM clients to perform a direct access on the file.\n\u003cprot name=\"gsiftp\"\u003e \u003cid\u003e0\u003c/id\u003e \u003cschema\u003egsiftp\u003c/schema\u003e \u003chost\u003egridftp-dteam.cnaf.infn.it\u003c/host\u003e \u003cport\u003e2811\u003c/port\u003e \u003c/prot\u003e The gsiftp protocol:\nThe gsiftp protocol means the GridFTP transfer system from Globus widely adopted in many Grid environments. This capability element contains all the information about the GridFTP server to use with this Storage Area. Site administrator can decide to have different server (or pools of server) for different Storage Areas. The id is the server identifier to be used when defining a pool. The schema have to be gsiftp. host is the hostname of the server (or the DNS alias used to aggregate more than one server). The port is the GridFTP server port, typically 2811. If user performs an SRM request (srmPtG or srmPtP) specifying the gsiftp protocol, and it is supported by the selected Storage Area, StoRM return a TURL structured as:\ngsiftp://gridftp-dteam.cnaf.infn.it:2811/atlas/atlasmcdisk/filename.  The rfio protocol:\n\u003cprot name=\"rfio\"\u003e \u003cschema\u003erfio\u003c/schema\u003e \u003chost\u003erfio-dteam.cnaf.infn.it\u003c/host\u003e \u003cport\u003e5001\u003c/port\u003e \u003c/prot\u003e This capability element contains all the information about the rfio server to use with this Storage Area. Like for GridFTP, site administrator can decide to have different server (or pools of server) for different Storage Areas. The id is the server identifier. The schema have to be rfio. host is the hostname of the server (or the DNS alias used to aggregate more than one server). The port is the rfio server port, typically 2811. If user performs an SRM request (srmPtG or srmPtP) specifying the rfio protocol, and it is supported by the selected Storage Area, StoRM return a TURL structured as:\nrfio://rfio-dteam.cnaf.infn.it:5001/atlas/atlasmcdisk/filename.  The root protocol:\n\u003cprot name=\"root\"\u003e \u003cschema\u003eroot\u003c/schema\u003e \u003chost\u003eroot-dteam.cnaf.infn.it\u003c/host\u003e \u003cport\u003e1094\u003c/port\u003e \u003c/prot\u003e This capability element contains all the information about the root server to use with this Storage Area. Like for other protocols, site administrator can decide to have different server (or pools of server) for different Storage Areas. The id is the server identifier. The schema have to be root. host is the hostname of the server (or the DNS alias used to aggregate more than one server). The port is the root server port, typically 1094. If user performs an SRM request (srmPtG or srmPtP) specifying the root protocol, and it is supported by the selected Storage Area, StoRM return a TURL structured as:\nroot://root-dteam.cnaf.infn.it:1094/atlas/atlasmcdisk/filename.  Pool of protocol servers \u003cpool\u003e \u003cbalance-strategy\u003eround-robin\u003c/balance-strategy\u003e \u003cmembers\u003e \u003cmember member-id=\"0\"\u003e\u003c/member\u003e \u003cmember member-id=\"1\"\u003e\u003c/member\u003e \u003c/members\u003e \u003c/pool\u003e Here is defined a pool of protocol servers. Within the pool element pool members are declared identified by their id, the list of members have to be homogenious with respect to their schema. This id is the server identifier specified in the prot element. The balance-strategy represent the load balancing strategy with which the pool has to be managed. Possible values are: round-robin, smart-rr, random and weight.  NOTE: Protocol server pooling is currently available only for gsiftp servers.  Load balancing strategies details:\n  round-robin At each TURL construction request the strategy returns the next server following the round-robin approach: a circular list with an index starting from the head and incrementd at each request.\n  smart-rr An enhanced version of round-robin. The status of pool members is monitored and maintained in a cache. Cache entries has a validity life time that is refreshed when expired. If the member chosen by round-robin is marked as not responsive another iteration of round-robin is performed.\n  random At each TURL construction request the strategy returns a random member of the pool.\n  weight An enhanced version of round-robin. When a server is chosen the list index will not be moved forward (and the server will be choosen again in next request) for as many times as specified in its weight.\n  NOTE: The weight has to be specified in a weight element inside the member element:\n\u003cpool\u003e \u003cbalance-strategy\u003eWEIGHT\u003c/balance-strategy\u003e \u003cmembers\u003e \u003cmember member-id=\"0\"\u003e \u003cweight\u003e5\u003c/weight\u003e \u003c/member\u003e \u003cmember member-id=\"1\"\u003e \u003cweight\u003e1\u003c/weight\u003e \u003c/member\u003e \u003c/members\u003e \u003c/pool\u003e Storage space information default values \u003cdefaults-values\u003e \u003cspace lifetime=\"86400\" type=\"volatile\" guarsize=\"291\" totalsize=\"291\"/\u003e \u003cfile lifetime=\"3600\" type=\"volatile\"/\u003e \u003c/defaults-values\u003e Mapping rules A mapping rule define how a certain NS-Filesystem, that correspond to a Storage Area in SRM meaning of terms, is exposed in Grid:\n\u003cmapping-rules\u003e \u003cmap-rule name=\"dteam-maprule\"\u003e \u003cstfn-root\u003e/dteam\u003c/stfn-root\u003e \u003cmapped-fs\u003edteam-FS\u003c/mapped-fs\u003e \u003c/map-rule\u003e \u003c/mapping-rules\u003e The \u003cstfn-root\u003e is the path used to build SURL referring to that Storage Area. The mapping rule above define that the NS-Filesystem named dteam-FS has to be mapped in the /dteam SURL path. Following the NS-Filesystem element defined in the previous section, the SURL:\nsrm://storm-fe.cr.cnaf.infn.it:8444/dteam/testfile  following the root expressed in the dteam-FS NF-Filesystem element, is mapped in the physical root path on the file system:\n/storage/dteam  This approach works similar to an alias, from the SURL stfn-root path to the NS-Filesystem root.\nApproachable rules Approachable rules defines which users (or which class of users) can approach a certain Storage Area, always expressed as NS-Filesystem element. If a user can approach a Storage Area, he can use it for all SRM operations. If a user is not allowed to approach a Storage Area, and he try to specify it in any SRM request, he will receive an SRM_INVALID_PATH. In practics, if a user cannot approach a Storage Area, for him that specific path does not exists at all. Here is an example of approachable rule for the dteam-FS element:\n\u003capproachable-rules\u003e \u003capp-rule name=\"dteam-rule\"\u003e \u003csubjects\u003e \u003cdn\u003e*\u003c/dn\u003e \u003cvo-name\u003edteam\u003c/vo-name\u003e \u003c/subjects\u003e \u003capproachable-fs\u003edteam-FS\u003c/approachable-fs\u003e \u003cspace-rel-path\u003e/\u003c/space-rel-path\u003e \u003c/app-rule\u003e \u003c/approachable-rules\u003e   \u003cdn\u003e*\u003c/dn\u003e means that everybody can access the storage Area. Here you can define regular expression on DN fields to define more complex approachable rules.\n  \u003cvo-name\u003edteam\u003c/vo-name\u003e means that only users belonging to the VO dteam will be allowed to access the Storage Area. This entry can be a list of comma separeted VO-name.\n  Used space initialization An administrator can initialize the status of a Storage Area by editing a configuration file, the used-space.ini configuration file, that it’s parsed once at Backend’s bootstrap time. See this configuration example for more info.\n","excerpt":"Mapping SURLs to TURLs Information about storage managed by StoRM is …","ref":"/storm-docs/docs/concepts/storage-info/","title":"StoRM Storage Information"},{"body":"","excerpt":"","ref":"/storm-docs/docs/configuration/how-to/ipv6/","title":"Bind StoRM services over IPv6"},{"body":"Prerequisites Are there any system requirements for using your project? What languages are supported (if any)? Do users need to already have any software or tools installed?\nRepositories StoRM user Storage Area permissions Installation with metapackages Where can your user find your project code? How can they install it (binaries, installable package, build from source)? Are there multiple options/versions they can install and how should they choose the right one for them?\nPuppet Quick Start ","excerpt":"Prerequisites Are there any system requirements for using your …","ref":"/storm-docs/docs/getting-started/","title":"Getting Started"},{"body":"","excerpt":"","ref":"/storm-docs/releases/frontend/","title":"StoRM Frontend Releases"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/user-guides/webdav/","title":"WebDAV User Guide"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/configuration/gridftp/","title":"StoRM GridFTP DSI plugin"},{"body":"LCMAPS is the Local Credential Mapping Service and it takes care of translating grid credentials to Unix credentials local to the site by using the pool account mechanism. It takes care of ensuring that different individuals on the Grid remain distinct Unix accounts. Using group mappings based on the user’s VO attributes, isolation and scheduling priority decisions can be made.\n See more on https://wiki.nikhef.nl/grid/LCMAPS\n This mapping can be configured via YAIM through the variables USERS_CONF and GROUPS_CONF. These variables contain the full absolute path of a couple of files: users.conf and groups.conf.\nThe file users.conf contains the list of Linux users (pool accounts) to be created. It’s a plain list of the users and their IDs. An example of this configuration file can be found into:\n/opt/glite/yaim/examples/users.conf More details can be found in the User configuration section in the YAIM guide.\nThe UNIX users here defined must be created on the service nodes that need them (mainly CE and WNs). The format is the following (fields must not have any white space):\nUID:LOGIN:GID1[,GID2,...]:GROUP1[,GROUP2,...]:VO:FLAG:  UID = user ID. This must be a valid uid. Make sure the number you choose is not assigned to another user. LOGIN = login name GID1 = primary group ID. This must be a valid gid. Make sure the number you choose is not assigned to another group. GID2 = secondary group ID. GROUP1 = primary group GROUP2 = secondary group VO = virtual organization FLAG = string to identify special users, further described below  You can customize this file to your site needs.\nThe groups.conf file defines the user categories that must be accepted by the grid services provided by a site. It indicates for each category to which kind of local accounts the user should be mapped, where applicable. The file has the following format:\n\"VOMS_FQAN\":GROUP:GID:FLAG:[VO]  VOMS_FQAN = VOMS proxy fully qualified attribute name GROUP = UNIX group GID = UNIX GID FLAG = string to identify special users, further described below VO = virtual organization (optional. It allows the VO to be specified explicitly, otherwise it will be derived from the VOMS FQAN  The groups.conf distributed by YAIM is only an example. You can remove the lines that doesn’t apply to your site or VO and add new lines if needed. Example:\n\"/dteam/ROLE=lcgadmin\":::sgm: \"/dteam/ROLE=production\":::prd: \"/dteam\":::: The groups.conf file lists the VOMS proxy primary FQANs that are accepted. If a proxy has a secondary FQAN that matches one of the FQANs listed, the mapped account may receive an extra secondary GID corresponding to the matched FQAN. That GID normally is derived from the corresponding accounts in the users.conf file. If there are no accounts dedicated to that FQAN, the desired extra GID (if any) and GROUP name must be given in groups.conf. Note that:\n it is normal for the second and third fields to be empty, as shown in the example; the account corresponding to the primary FQAN does not have to belong to any secondary group: the LCMAPS library can set secondary groups independently of what is in /etc/group; the order of the lines in groups.conf is important: for any FQAN only the first match is taken  The FLAG selects a set of special accounts to be used for the mapping, namely those accounts in users.conf that have the same flag. By default, when the flag is empty, the ordinary pool accounts will be used.\nACLs: AheadOfTime or JustInTime Setting ACL on directory and files is foundamental to give to the mapped user and group the necessary permissions to read and write on a storage area (or a part of it).\nAheadOfTime and JustInTime are the two ACL enforcing approach of StoRM.\nIn case of AheadOfTime (AoT) approach, StoRM sets up a physical ACL on file and directories for the local group (gid) in which the user is mapped (the mapping is done querying the LCMAPS service con the BE machine passing both user DN and FQANs). The group ACL remains for the whole lifetime of the file.\nIn case of JustInTime (JiT) approach, StoRM sets up and ACL for the local user (uid) the user is mapped. The ACL remains in place only for the lifetime of the SRM request, then StoRM removes it (this is done to avoid granting access to pool account uid in case of reallocation on different users).\nExample Configure users and groups mapping We want to create the following pool accounts:\n a pool account of 100 users with group name testvo and test.vo as VO name a pool account of 30 production users with group name testvoprd, test.vo as VO name and prd as FLAG.  In order to do this we have to create the following files:\n storm-users.conf storm-groups.conf  The first file contains the definition of all the users (with their relative groups):\n71001:tstvo001:7100:testvo:test.vo:: 71002:tstvo002:7100:testvo:test.vo:: 71003:tstvo003:7100:testvo:test.vo:: 71004:tstvo004:7100:testvo:test.vo:: ... 71100:tstvo100:7100:testvo:test.vo:: 71101:testvoprd001:7170,7100:testvoprd,testvo:test.vo:prd: 71102:testvoprd002:7170,7100:testvoprd,testvo:test.vo:prd: 71103:testvoprd003:7170,7100:testvoprd,testvo:test.vo:prd: 71104:testvoprd004:7170,7100:testvoprd,testvo:test.vo:prd: ... 71129:testvoprd029:7170,7100:testvoprd,testvo:test.vo:prd: 71130:testvoprd030:7170,7100:testvoprd,testvo:test.vo:prd: The second file contains the mapping rules used to map a FQAN to a local group.\n\"/test.vo/ROLE=R1\":::prd: \"/test.vo\":::: In this case, we defined:\n a rule that maps test.vo users with role equal to R1 to the pool account with FLAG = prd (group name testvoprd) a rule that maps all the other test.vo users to the group testvo  To apply the changes, define YAIM’s variables into a site.def file:\nUSERS_CONF=/path/to/storm-users.conf GROUPS_CONF=/path/to/storm-groups.conf VOS=test.vo and run yaim configuration as follow:\n/opt/glite/yaim/bin/yaim \\  -c -s site.def \\  -n se_config_users You need a YAIM profile /opt/glite/yaim/node-info.d/se_config_users defined as follows:\nse_config_users_FUNCTIONS=\" config_users \"  Install YAIM with:\nyum install -y glite-yaim-core attr  ","excerpt":"LCMAPS is the Local Credential Mapping Service and it takes care of …","ref":"/storm-docs/docs/reference/configuration/backend/lcmaps-mapping/","title":"LCMAPS mapping"},{"body":"","excerpt":"","ref":"/storm-docs/docs/configuration/how-to/argus-blacklisting/","title":"Configure Argus users blacklisting"},{"body":"","excerpt":"","ref":"/storm-docs/docs/configuration/","title":"StoRM Configuration"},{"body":"","excerpt":"","ref":"/storm-docs/releases/webdav/","title":"StoRM WebDAV Releases"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/configuration/webdav/","title":"StoRM WebDAV"},{"body":" This is a placeholder page that shows you how to use this template site.\n For many projects, users may not need much information beyond the information in the Overview, so this section is optional. However if there are areas where your users will need a more detailed understanding of a given term or feature in order to do anything useful with your project (or to not make mistakes when using it) put that information in this section. For example, you may want to add some conceptual pages if you have a large project with many components and a complex architecture.\nRemember to focus on what the user needs to know, not just what you think is interesting about your project! If they don’t need to understand your original design decisions to use or contribute to the project, don’t put them in, or include your design docs in your repo and link to them. Similarly, most users will probably need to know more about how features work when in use rather than how they are implemented. Consider a separate architecture page for more detailed implementation and system design information that potential project contributors can consult.\n","excerpt":" This is a placeholder page that shows you how to use this template …","ref":"/storm-docs/docs/concepts/","title":"Concepts"},{"body":"","excerpt":"","ref":"/storm-docs/docs/configuration/how-to/ssr/","title":"Configure Storage Space Report"},{"body":"","excerpt":"","ref":"/storm-docs/releases/gridftp/","title":"StoRM GridFTP DSI plugin releases"},{"body":"","excerpt":"","ref":"/storm-docs/docs/user-guides/","title":"User Guides"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/configuration/info-provider/","title":"StoRM Dynamic Info Provider"},{"body":"Create local pool accounts with YAIM In order to create your local pool accounts with YAIM, you need to define a users.conf file and assign its absolute path to the YAIM variable USERS_CONF.\nThe file users.conf contains the list of Linux users (pool accounts) to be created. It’s a plain list of the users and their IDs. An example of this configuration file can be found into:\n/opt/glite/yaim/examples/users.conf More details can be found in the User configuration section in the YAIM guide.\nThe UNIX users here defined must be created on the service nodes that need them (mainly CE and WNs). The format is the following (fields must not have any white space):\nUID:LOGIN:GID1[,GID2,...]:GROUP1[,GROUP2,...]:VO:FLAG:  UID = user ID. This must be a valid uid. Make sure the number you choose is not assigned to another user. LOGIN = login name GID1 = primary group ID. This must be a valid gid. Make sure the number you choose is not assigned to another group. GID2 = secondary group ID. GROUP1 = primary group GROUP2 = secondary group VO = virtual organization FLAG = string to identify special users, further described below  Example We want to create the following pool accounts:\n a pool account of 100 users with group name testvo and test.vo as VO name a pool account of 30 production users with group name testvoprd, test.vo as VO name and prd as FLAG.  In order to do this we have to create the following file:\n storm-users.conf  This file contains the definition of all the users (with their relative groups):\n71001:tstvo001:7100:testvo:test.vo:: 71002:tstvo002:7100:testvo:test.vo:: 71003:tstvo003:7100:testvo:test.vo:: 71004:tstvo004:7100:testvo:test.vo:: ... 71100:tstvo100:7100:testvo:test.vo:: 71101:testvoprd001:7170,7100:testvoprd,testvo:test.vo:prd: 71102:testvoprd002:7170,7100:testvoprd,testvo:test.vo:prd: 71103:testvoprd003:7170,7100:testvoprd,testvo:test.vo:prd: 71104:testvoprd004:7170,7100:testvoprd,testvo:test.vo:prd: ... 71129:testvoprd029:7170,7100:testvoprd,testvo:test.vo:prd: 71130:testvoprd030:7170,7100:testvoprd,testvo:test.vo:prd: To apply the changes, define YAIM’s variables into a site.def configuration file:\nUSERS_CONF=/path/to/storm-users.conf VOS=test.vo You need a proper YAIM profile /opt/glite/yaim/node-info.d/se_config_users defined as follows:\nse_config_users_FUNCTIONS=\" config_users \" The only function used in this profile is the one that creates the users. Then, you can run yaim configuration as follow:\n/opt/glite/yaim/bin/yaim \\  -c -s site.def \\  -n se_config_users  Install YAIM with:\nyum install -y glite-yaim-core attr  ","excerpt":"Create local pool accounts with YAIM In order to create your local …","ref":"/storm-docs/docs/reference/configuration/backend/pool-accounts/","title":"Pool accounts configuration"},{"body":"","excerpt":"","ref":"/storm-docs/docs/configuration/how-to/sa-used-space/","title":"Initialize Storage Area used space from file"},{"body":"","excerpt":"","ref":"/storm-docs/releases/native-libs/","title":"StoRM Native Libs Releases"},{"body":"","excerpt":"","ref":"/storm-docs/docs/configuration/how-to/","title":"How-To"},{"body":"","excerpt":"","ref":"/storm-docs/releases/info-provider/","title":"StoRM Dynamic Info Provider Releases"},{"body":"","excerpt":"","ref":"/storm-docs/releases/srm-client/","title":"StoRM SRM Client Releases"},{"body":"","excerpt":"","ref":"/storm-docs/releases/xmlrpc-c/","title":"StoRM XMLRPC-C Releases"},{"body":"","excerpt":"","ref":"/storm-docs/releases/cdmi-storm/","title":"CDMI StoRM Releases"},{"body":"If your project has an API, configuration, or other reference - anything that users need to look up that’s at an even lower level than a single task - put (or link to it) here. You can serve and link to generated reference docs created using Doxygen, Javadoc, or other doc generation tools by putting them in your static/ directory. Find out more in Adding static content. For OpenAPI reference, Docsy also provides a Swagger UI layout and shortcode that renders Swagger UI using any OpenAPI YAML or JSON file as source.\n","excerpt":"If your project has an API, configuration, or other reference - …","ref":"/storm-docs/docs/reference/","title":"Reference"},{"body":"","excerpt":"","ref":"/storm-docs/releases/utils/","title":"StoRM Utils Releases"},{"body":"","excerpt":"","ref":"/storm-docs/blog/news/","title":"News About StoRM"},{"body":"","excerpt":"","ref":"/storm-docs/blog/releases/","title":"New StoRM Releases"},{"body":"","excerpt":"","ref":"/storm-docs/docs/","title":"Documentation"},{"body":"The StoRM Product Team is pleased to announce the release of StoRM 1.11.21 that includes the following updated components:\n StoRM Backend v. 1.11.21 StoRM Frontend v. 1.8.15 StoRM WebDAV v. 1.4.1  and introduces:\n StoRM Utils v. 1.0.0  This release:\n fixes the known issue about the upgrade to StoRM v1.11.20 which could break connections with MariaDB fixes the boot order for both Frontend and Backend ensuring that mariadb service is started before StoRM services; fixes the failed state shown on stop/restart of Java components; provides a set of scripts that can be used to edit from command line the storage space info related to a storage area.  Please, follow the upgrade instructions. Read the release notes for more details.\n","excerpt":"The StoRM Product Team is pleased to announce the release of StoRM …","ref":"/storm-docs/blog/2021/05/12/released-storm-v1.11.21/","title":"Released StoRM v1.11.21"},{"body":"After the update from StoRM v1.11.19 to StoRM v1.11.20, if JVM and database are not on the same timezone, the Backend’s communication with MariaDB could start failing with the following error:\nCaused by: java.sql.SQLException: The server time zone value 'CEST' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support. This bug is tracked at STOR-1397.\nThe possible solutions to avoid this problem are:\n downgrade StoRM Backend to v1.11.19 (recommended) apply a workaround within MariaDB install StoRM Backend v1.11.21 beta  Downgrade StoRM Backend to v1.11.19 RECOMMENDED. It’s the fastest and easy thing to do. The command:\nyum downgrade storm-backend-server should ask you to install StoRM Backend v1.11.19. Confirm and restart the service:\nsystemctl restart storm-backend-server Apply a workaround within MariaDB   Populate mysql.time_zone_name table\nThe mysql.time_zone_name table should be empty:\nMariaDB [mysql]\u003e SELECT * FROM mysql.time_zone_name; Empty set (0.00 sec) and global variable time_zone should be set to SYSTEM.\nMariaDB [mysql]\u003e SHOW GLOBAL VARIABLES LIKE 'time_zone'; +---------------+--------+ | Variable_name | Value | +---------------+--------+ | time_zone | SYSTEM | +---------------+--------+ 1 row in set (0.00 sec) We need to populate that table as follows:\nmysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -uroot -pYOUR_MYSQL_ROOT_PASSWORD mysql   Set default_time_zone\nEdit /etc/my.cnf.d/server.conf and add under [mysql] section add the following:\ndefault_time_zone = Europe/Rome Or choose your proper time_zone.\n  Restart MySQL\nsystemctl restart mariadb And check new time zone value:\nMariaDB [(none)]\u003e SHOW GLOBAL VARIABLES LIKE 'time_zone'; +---------------+-------------+ | Variable_name | Value | +---------------+-------------+ | time_zone | Europe/Rome | +---------------+-------------+ 1 row in set (0.00 sec)   Restart StoRM Backend\nsystemctl restart storm-backend-server   Install StoRM Backend v1.11.21 beta StoRM beta repository already contains a beta version of next StoRM v1.11.21 with this error fixed. Of course beta repository is not a stable repo, so apply this in case of a testbed. We do not recommend use this rpms in a production behaviour.\nBrowse CentOS 7 Beta repository here.\n","excerpt":"After the update from StoRM v1.11.19 to StoRM v1.11.20, if JVM and …","ref":"/storm-docs/blog/2021/04/30/storm-v1.11.20-could-break-connections-with-mariadb/","title":"StoRM v1.11.20 could break connections with MariaDB"},{"body":"This is a typical blog post that includes images.\nThe front matter specifies the date of the blog post, its title, a short description that will be displayed on the blog landing page, and its author.\nIncluding images Here’s an image (featured-sunset-get.png) that includes a byline and a caption.\nFetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\n  The front matter of this post specifies properties to be assigned to all image resources:\nresources: - src: \"**.{png,jpg}\" title: \"Image #:counter\" params: byline: \"Photo: Riona MacNamara / CC-BY-CA\" To include the image in a page, specify its details like this:\n Fetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\n  The image will be rendered at the size and byline specified in the front matter.\n","excerpt":"This is a typical blog post that includes images.\nThe front matter …","ref":"/storm-docs/blog/2018/10/06/easy-documentation-with-docsy/","title":"Easy documentation with Docsy"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Header 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There’s a horizontal rule above and below this.\n Here is an unordered list:\n Salt-n-Pepa Bel Biv DeVoe Kid ‘N Play  And an ordered list:\n Michael Jackson Michael Bolton Michael Bublé  And an unordered task list:\n Create a sample markdown document Add task lists to it Take a vacation  And a “mixed” task list:\n Steal underpants ? Profit!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition terms are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \"bar\";   Ruby foo = \"bar\"{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts  This is an alert.  Note: This is an alert with a title.  This is a successful alert.  This is a warning!  Warning! This is a warning with a title!  Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","excerpt":"Text can be bold, italic, or strikethrough. Links should be blue with …","ref":"/storm-docs/blog/2018/10/06/the-second-blog-post/","title":"The second blog post"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Header 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There’s a horizontal rule above and below this.\n Here is an unordered list:\n Salt-n-Pepa Bel Biv DeVoe Kid ‘N Play  And an ordered list:\n Michael Jackson Michael Bolton Michael Bublé  And an unordered task list:\n Create a sample markdown document Add task lists to it Take a vacation  And a “mixed” task list:\n Steal underpants ? Profit!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition terms are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \"bar\";   Ruby foo = \"bar\"{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts  This is an alert.  Note: This is an alert with a title.  This is a successful alert.  This is a warning!  Warning! This is a warning with a title!  Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","excerpt":"Text can be bold, italic, or strikethrough. Links should be blue with …","ref":"/storm-docs/blog/2018/01/04/another-great-release/","title":"Another Great Release"},{"body":" This is a placeholder page. Replace it with your own content.\n Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.\n90’s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps kale chips.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header 2 This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier craft beer. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven’t heard of them copper mug, crucifix green juice vape single-origin coffee brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!\nDeae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nScenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR\u0026B. I love this life we live in.\nSecond Header 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Next level leggings before they sold out, PBR\u0026B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.\nHeader 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There’s a horizontal rule above and below this.\n Here is an unordered list:\n Liverpool F.C. Chelsea F.C. Manchester United F.C.  And an ordered list:\n Michael Brecker Seamus Blake Branford Marsalis  And an unordered task list:\n Create a Hugo theme Add task lists to it Take a vacation  And a “mixed” task list:\n Pack bags ? Travel!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition headers are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \"bar\";   Ruby foo = \"bar\"{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nThe photo above of the Spruce Picea abies shoot with foliage buds: Bjørn Erik Pedersen, CC-BY-SA.\nComponents Alerts  This is an alert.  Note This is an alert with a title.  Note This is an alert with a title and Markdown.  This is a successful alert.  This is a warning.  Warning This is a warning with a title.  Another Heading Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis Document Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam eripitur? Sitim noceat signa probat quidem. Sua longis fugatis quidem genae.\nPixel Count Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR\u0026B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.\nContact Info Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.\nExternal Links Stumptown PBR\u0026B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.\nThis is the final element on the page and there should be no margin below this. ","excerpt":" This is a placeholder page. Replace it with your own content.\n Text …","ref":"/storm-docs/docs/reference/example-page/","title":"Example Page"},{"body":"","excerpt":"","ref":"/storm-docs/about/","title":"About us"},{"body":"The StoRM Backend component has several responsabilities:\n executes all synchronous (active) actions retrieves asynchronous request from the database executes all asynchronous actions binds with underlying file systems enforces authorization policy on files manages SRM file and space metadata  Internal macro components StoRM Backend has the following internal macro components:\n Asynchronous SRM requests manager Synchronous SRM requests manager XML-RPC server Persistence manager Namespace component Autorization component Filesystem manager  SRM requests from database The Picker component retrieves the specified amount of new SRM requests from the Database at each time interval, and forward them to a Scheduler. The Scheduler takes care of forward the request to the right worker thread as a new task to be executed. The request status is updated into the Database with all the information concerining request results, error and other data. This data are accessible from the FE to answer to a srmStatusOf* request. This pattern is shown in the following picture:\nMost of the parameters characterizing this architecture are configurable.\nFile System driver StoRM interacts with the different file systems supported through a driver mechanism. Each driver is a native library written mainly in C/C++, since most of the file system provides C libraries for the advanced API. StoRM Backend uses JNI to connect with drivers. The functionalities provided by each driver are:\n ACL management Space management  The drivers available with StoRM are:\n posixfs generic driver for posix file system. It relies on the standard setfacl(), getfacl() syscall for ACL management, and it does not provide any advanced space management capabilities. GPFS specific driver that relies on GPFS advanced API, such as gpfs_prealloc for space management and gpfs_set_acl() for ACL management.  This driver mechanism implements a common interface and decouple StoRM internal logic from the different functionalities provided by the underlying storage system. The drivers are loaded at run time following the storage namespace configuration. A single StoRM server is able to work on different file system at the same time, and with this flexible approach it can be easily adapted to support new kind of file systems or other storage resources.\n","excerpt":"The StoRM Backend component has several responsabilities:\n executes …","ref":"/storm-docs/docs/overview/backend/","title":"StoRM Backend"},{"body":"","excerpt":"","ref":"/storm-docs/docs/reference/configuration/backend/","title":"StoRM Backend"},{"body":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","excerpt":"This is the blog section. It has two categories: News and Releases. …","ref":"/storm-docs/blog/","title":"StoRM Blog"},{"body":"","excerpt":"","ref":"/storm-docs/community/","title":"StoRM Community"},{"body":"","excerpt":"","ref":"/storm-docs/docs/reference/configuration/","title":"Configuration"},{"body":"Pool of worker threads The FE uses a pool of worker threads to manage SRM requests. Once a request has been authorized, the FE assigns it as a new task for a worker thread. In case there are no free threads in the system, the request is maintained in an internal queue. The size of the pool and the size of the queue are important parameters, their value have to be defined depending on hardware resources and performance required. Depending on the type of SRM request, each thread should have two main task to do, as explained in the next paragraph.\nXML-RPC communication Synchronous SRM requests are a category of SRM calls that return the control to the client only when the request has been executed by the system. Most of the SRM call belongs to this category:\n Namespace operations (srmLs, srmMkdir, etc.) Discovery operation (srmPing) Space operations (srmReserveSpace, srmGetSpaceMetadata, etc.)  For this type of request, the FE perform a direct communication to the Backend using a RPC approach, based on the XML-RPC protocol. XML-RPC is a simple protocol to exchange XML structured data over HTTP. The Backend provides an XML-RPC server and the FE(s) acts as client. A worker threads in case of synchronous requests performs this steps:\n structure the SRM data in XML send a request to the BE XML-RPC server wait until the execution get result from XML and unmarshall it in SOAP return the control to the client  ","excerpt":"Pool of worker threads The FE uses a pool of worker threads to manage …","ref":"/storm-docs/docs/overview/frontend/","title":"StoRM Frontend"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/reference/configuration/frontend/","title":"StoRM Frontend"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/overview/gridftp/","title":"StoRM GridFTP DSI plugin"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/reference/configuration/gridftp/","title":"StoRM GridFTP"},{"body":"","excerpt":"","ref":"/storm-docs/releases/","title":"StoRM Components"},{"body":"","excerpt":"","ref":"/storm-docs/search/","title":"Search Results"},{"body":"  #td-cover-block-0 { background-image: url(/storm-docs/featured-background_hudf5fedb61b31f317d42d80dbfcd21dc9_181740_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/storm-docs/featured-background_hudf5fedb61b31f317d42d80dbfcd21dc9_181740_1920x1080_fill_q75_catmullrom_top.jpg); } }  StoRM (STOrage Resource Manager) Learn More   Download   StoRM (STOrage Resource Manager) is a light, scalable, flexible, high-performance, file system independent, storage manager service (SRM) for generic disk based storage system, compliant with the standard SRM interface version 2.2.\n         Implements the SRM specification StoRM is adopted in the context of WLCG computational Grid framework. It provides data management capabilities in a Grid environment to share, access and transfer data among heterogeneous and geographically distributed data centers. StoRM implements the Storage Resource Manager (SRM) specification.\n       New chair metrics! The Goldydocs UI now shows chair size metrics by default.\nPlease follow this space for updates!\n   Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\nRead more …\n   Follow us on Twitter! For announcement of latest features etc.\nRead more …\n     Built for cluster filesystems StoRM works on any POSIX filesystems, but was built to bring in the Grid the advantages of high performance storage systems based on cluster file system (such as GPFS from IBM or Lustre from Sun Microsystems), supporting direct access (native POSIX I/O call) to shared files and directories, as well as other standard Grid access protocols\n       Download from AppStore Get the Goldydocs app!\n   Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\nRead more …\n   Follow us on Twitter! For announcement of latest features etc.\nRead more …\n     This is another Section     ","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/storm-docs/","title":"StoRM"},{"body":"Introduction StoRM Path Authorization Database gives to the system administrator a way to customize users permissions on internal paths of a storage area: different local users/groups could have different rights on the same path. For each SRM request, the authorized VO user is mapped on one local user and group. Knowing this, the system administrator can write a list of ACE (Access Control Entry), evaluated by a selected algorithm, in order to permit or deny to a local user/group a list of operations on a particular path.\nThe choose of the evaluation algorithm and the definition of the list of ACEs can be done by editing the file:\n/etc/storm/backend-server/path-authz.db. Evaluation algorithm The selected evaluation algorithm is indicated by the property algorithm. Its default value is:\nalgorithm=it.grid.storm.authz.path.model.PathAuthzAlgBestMatch  NOTE: Currently, this is the unique supported algorithm that can be specified.\n To determine if a request succeeds, the PathAuthzAlgBestMatch evaluation algorithm processes the ACE list in a computed order:\n only the ACE which have a local UNIX group that matches the requester subject are considered; the order of the ACE is defined on the base of distance from the requested SURL’s StFN and the path specified within the ACE; each ACE is processed until all of the bits of the requester’s access have been checked.  The result will be:\n NOT_APPLICABLE if there are no ACE matching with the requester. INDETERMINATE if there is at least one bit not checked. DENY if there is at least one bit DENIED for the requestor PERMIT if all the bits are PERMIT  Access Control Entries The default ACE stored into path-authz.db authorization file allows every kind of operation on all the storage areas:\n#--------+-----------------------+---------+ # user | Path | Permission | ACE | # class | | mask | type | #--------+-----------------------+---------+ @ALL@ / RLWFDMN permit Each ACE is composed by the following information:\n USER CLASS contains the name of the UNIX group involved or @ALL@ to match all the groups; PATH is the relative sub-path based on the storage area root; the PERMISSION MASK contains from one to all the following letters:  W : WRITE_FILE “Write data on existing files” R : READ_FILE “Read data” F : MOVE/RENAME “Move a file” D : DELETE “Delete a file or a directory” L : LIST_DIRECTORY “Listing a directory” M : CREATE_DIRECTORY “Create a directory” N : CREATE_FILE “Create a new file”   ACE TYPE value could be permit or deny and indicates if the selected operations on that path have to be blocked or allowed.  Example To properly configure StoRM’s Path Authorization DataBase it’s useful to have the right knowledge about the users/groups involved with LCMAPS mapping.\nHere we’re going to show how to configure a simple path authorization filter on our test VO’s storage area: test.vo. The idea is to create:\n a sub-directory test.vo/PRD accessible in read/write mode only by users that belong to the local group testvoprd; a sub-directory test.vo/USERS accessible in read/write mode only by users that belong to the local group testvo but readable by testvoprd users.  Edit:\n/etc/storm/backend-server/path-authz.db  as follow:\n#----------+--------------+------------+--------+ # user | Path | Permission | ACE | # class | | mask | type | #----------+--------------+------------+--------+ testvoprd /test.vo/PRD RLWFDMN permit @ALL@ /test.vo/PRD RLWFDMN deny testvo /test.vo/USERS RLWFDMN permit testvoprd /test.vo/USERS RL permit @ALL@ /test.vo/USERS RLWFDMN deny @ALL@ / RLWFDMN permit This ACE list say that:\n All the users mapped into testvoprd group can do any kind of operation into /test.vo/PRD directory and read/list files into /test.vo/USERS (1st and 4th ACEs); All the users mapped into testvo group can do any kind of operation into /test.vo/USERS directory (3rd ACE); All the user mapped into a group different from testvoprd and testvo can’t access /test.vo/PRD or /test.vo/USERS (2nd and 5th ACEs); No ACEs are defined for the other storage areas (6th ACE).  The order of the ACEs is important because the evaluation algorithm stops after the first match with minimal distance from Path. For example, if we invert the first two rows of our ACE list, nobody will be authorized to read or write into /test.vo/PRD.\nTo apply the changes to path-authz.db you need to restart storm-backend-server:\nsystemctl restart storm-backend-server Users In order to do some test on the path-authz.db configuration showed above, two users with different VOMS attributes have been used:\n /C=IT/O=IGI/CN=test0 /C=IT/O=INFN/OU=Personal Certificate/L=CNAF/CN=Enrico Vianello with “Role=R1”  Supposing the same LCMAPS configuration of this example, user Enrico Vianello will be mapped into testvoprd local group (it has “Role=R1” between its FQANs). User test0 has no “Role=R1” then it will be mapped to testvo local group.\nSRM tests The following tests have been done using:\n gfal tool for the SRM requests globus-url-copy of Globus Toolkit to direct upload/download files acl package (it’s a StoRM prerequisite) to read the ACL set on files/directories  ## Switch to user \"Enrico Vianello\" ## $ voms-proxy-init --voms test.vo:/test.vo/Role=R1 --cert vianello-2014.p12 ## Create directory /test.vo/tmp ## $ gfal-mkdir srm://centos6-devel.cnaf.infn.it:8444/test.vo/tmp ## Get ACLs from /test.vo/tmp ## $ getfacl /storage/test.vo/tmp getfacl: Removing leading '/' from absolute path names # file: storage/test.vo/tmp # owner: storm # group: storm user::rwx group::--- group:testvoprd:r-x mask::rwx other::--- ## The testvoprd ACL has been added added ## ## Create new local file: ## $ echo \"Hello world!!\" \u003e hello.txt ## Upload local file to /test.vo/tmp ## $ cat hello.txt | gfal-save srm://centos6-devel.cnaf.infn.it:8444/test.vo/tmp/hello.txt ## Check if the uploaded file exists: ## $ gfal-ls srm://centos6-devel.cnaf.infn.it:8444/test.vo/tmp hello.txt ## Get ACLs from /test.vo/tmp/hello.txt $ getfacl /storage/test.vo/tmp/hello.txt getfacl: Removing leading '/' from absolute path names # file: storage/test.vo/tmp/hello.txt # owner: storm # group: storm user::rw- group::--- group:testvoprd:rw- mask::rwx other::--- ## The testvoprd ACL has been added added ## Switch to test0 user: ## $ voms-proxy-init --voms test.vo --cert test0.p12 ## Get file content /test.vo/tmp/hello.txt ## $ gfal-copy srm://centos6-devel.cnaf.infn.it:8444/test.vo/tmp/hello.txt file:///tmp/hello.txt Copying 1 [DONE] after 1s ## Check the updated ACL on /test.vo/tmp/hello.txt ## $getfacl /storage/test.vo/tmp/hello.txt getfacl: Removing leading '/' from absolute path names # file: storage/test.vo/tmp/hello.txt # owner: storm # group: storm user::rw- group::--- group:testvo:r-- group:testvoprd:rw- mask::rwx other::--- ## testvo read permission has been added ## Switch to user \"Enrico Vianello\" ## $ voms-proxy-init --voms test.vo:/test.vo/Role=R1 --cert vianello-2014.p12 ## Create directory /test.vo/PRD (accessible only to testvoprd users): $ gfal-mkdir srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD ## getting ACLs on /test.vo/PRD $ getfacl /storage/test.vo/PRD/ getfacl: Removing leading '/' from absolute path names # file: storage/test.vo/PRD/ # owner: storm # group: storm user::rwx group::--- group:testvoprd:r-x mask::rwx other::--- ## Upload local file to /test.vo/PRD/hello.txt $ cat hello.txt | gfal-save srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD/hello.txt ## Check if the uploaded file exists: $ gfal-ls srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD hello.txt ## Get ACLs from /test.vo/PRD/hello.txt $ getfacl /storage/test.vo/PRD/hello.txt getfacl: Removing leading '/' from absolute path names # file: storage/test.vo/PRD/hello.txt # owner: storm # group: storm user::rw- group::--- group:testvoprd:rw- mask::rwx other::--- ## The testvoprd ACL has been added added ## Get uploaded file content: $ gfal-cat srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD/hello.txt Hello World!! ## Switch to test0 user: $ voms-proxy-init --voms test.vo --cert test0.p12 ## Get file content expecting unauthorized failure (1): $ gfal-cat srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD/hello.txt gfal-cat: error: Permission denied ## Get file content expecting unauthorized failure (1): $ gfal-copy srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD/hello.txt file:///tmp/hello.txt Copying 1 [FAILED] after 2s gfal-copy: error: Permission denied At this point a question could be raised: how does it works with direct calls from GridFTP? The GridFTP TURLs should be used only within the context of a SRM request (between a srmPtG and a srmRf or between a srmPtP and a srmPd). In this case there’s no problem because the SRM request will set the necessary ACL (indipendently from the enforcing approach used). If the GridFTP call is made out of the context of a SRM request the scenary depends on the operations done before and on who has done them, or depends on the Default ACL. It’s not sure that the necessary ACL is set (if the enforcing approach is JiT the ACL could even not exist), then the request can fail.\nIn case of AoT enforcing approach, if almost one user mapped on the same group has already done a SRM request on the resource, then a direct access to the same resource, providing the necessary credentials, will be successful.\nFor example, at the point of the example above, if user test0 does a globus-url-copy like the gfal-copy just done, the request will be successful:\n## Switch to user test0 ## ## Check failure on file download passing through StoRM SRM endpoint: ## $ gfal-copy srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD/hello.txt file:///tmp/hello.txt Copying 1 [FAILED] after 2s gfal-copy: error: Permission denied ## Resource is not reachable via SRM! ## Check failure on file download by directly accessing via GridFTP ## $ globus-url-copy -vb gsiftp://centos6-devel.cnaf.infn.it:2811/storage/test.vo/PRD/Hello.txt hello.tx Source: gsiftp://centos6-devel.cnaf.infn.it:2811/storage/test.vo/PRD/ Dest: file:///home/vianello/ Hello.txt -\u003e hello.tx error: globus_ftp_client: the server responded with an error 500 Command failed. : open error: Permission denied Avoid conflicts with Default ACL List StoRM allows site administrators to set a Default ACL List for each storage area (see backend configuration section of StoRM’s System Administrator guide).\nThe Default ACL List contains one or more pairs of a local user (uid) or group id (gid) and a permission (R, W, RW). All these ACL are automatically added by StoRM to the requested resource, at each read or write request.\nObviously, if the Default ACL involves users or groups that are used also into the path-authz.db, this configuration can generate conflicts and unexpected behaviors.\nFor example, if we add to our test.vo storage area the following default ACL:\nSTORM_TESTVO_DEFAULT_ACL_LIST=testvo:RW  we will give to all the users with group testvo read and write permissions on all the files and directories within the storage area. Default ACL list is propagated onto sub-directories and files when they are created or read by a SRM request. Then, if the site administrator applies it on an already existent filesystem tree, he must manually run a command which fix all the storage area’s ACL.\nGoing back to our example, added the STORM_TESTVO_DEFAULT_ACL_LIST and after a re-run of yaim confguration, we can retry to create/read/delete from test.vo, with the following results:\n## Create test0 VOMS proxy for test.vo ## $ voms-proxy-init --voms test.vo --cert test0.p12 ## Check root directory: it's empty ## $ gfal-ls srm://centos6-devel.cnaf.infn.it:8444/test.vo/ ## Attempt to create PRD directory: it should fail! ## $ gfal-mkdir srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD gfal-mkdir: error: Permission denied ## Upload file into test.vo:##  $ cat hello.txt | gfal-save srm://centos6-devel.cnaf.infn.it:8444/test.vo/Hello.txt ## Switch to user Enrico Vianello ## $ voms-proxy-init --voms test.vo:/test.vo/Role=R1 --cert vianello-2014.p12 ... ## Attempt to create PRD directory: a success is expected! $ gfal-mkdir srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD ## Upload file into PRD directory ## $ cat hello.txt | gfal-save srm://centos6-devel.cnaf.infn.it:8444/test.vo/PRD/Hello.txt ## Switch to test0 user ## $ voms-proxy-init --voms test.vo --cert test0.p12 ## Download unauthorized file: expected error, success retrieved!! $ globus-url-copy -vb gsiftp://centos6-devel.cnaf.infn.it:2811/storage/test.vo/PRD/Hello.txt /tmp/Hello.txt Source: gsiftp://centos6-devel.cnaf.infn.it:2811/storage/test.vo/PRD/ Dest: file:///tmp/ Hello.txt ## just to see the different ACL: $ getfacl /storage/test.vo/PRD/Hello.txt getfacl: Removing leading '/' from absolute path names # file: storage/test.vo/PRD/Hello.txt # owner: storm # group: storm user::rw- group::--- group:testvo:rw- group:testvoprd:rw- mask::rwx other::--- As expected, the new ACE:\ngroup:testvo:rw-  is propagated into all the test.vo sub-directories and allow read operations on files that would be unreadable before:\n$ globus-url-copy -vb gsiftp://centos6-devel.cnaf.infn.it:2811/storage/test.vo/PRD/Hello.txt /tmp/Hello.txt Source: gsiftp://centos6-devel.cnaf.infn.it:2811/storage/test.vo/PRD/ Dest: file:///tmp/ Hello.txt So, be careful and check both Defualt ACL List and storm-authz.db in order to avoid conflicts.\n","excerpt":"Introduction StoRM Path Authorization Database gives to the system …","ref":"/storm-docs/docs/reference/configuration/backend/path-authz.db/","title":"Configure StoRM Path Authorization Database"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/overview/webdav/","title":"StoRM WebDAV"},{"body":" This is a placeholder page. Replace it with your own content.\n ","excerpt":" This is a placeholder page. Replace it with your own content.\n ","ref":"/storm-docs/docs/reference/configuration/webdav/","title":"StoRM WebDAV"}]